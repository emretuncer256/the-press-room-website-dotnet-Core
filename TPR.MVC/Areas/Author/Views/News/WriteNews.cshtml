@using TPR.Business.Abstract
@using TPR.MVC.Areas.Author.Models
@model NewsUploadModel
@inject ICategoryService CS
@inject ITagService TS
@{
    ViewData["Title"] = "WriteNews";
    Layout = "~/Areas/Author/Views/Shared/_Layout.cshtml";
    var categories = (from ct in CS.GetAll().Data
                      select new SelectListItem
                              {
                                  Text = ct.Name,
                                  Value = ct.Id.ToString()
                              }).ToList();
    var tags = (from tag in TS.GetAll().Data
                select new SelectListItem
                        {
                            Text = tag.Name,
                            Value = tag.Id.ToString()
                        }).ToList();
    tags.Sort((a, b) => a.Text.CompareTo(b.Text));
}
@section Styles{
    <script src="https://cdn.tiny.cloud/1/rzj0tkhopoeg5iggh5u0hx14h5ize4uw4id14m9w3escgrhy/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
}
<div class="card">
    <div class="card-header">
        <h4 class="card-title">Write News</h4>
    </div>
    <div class="card-body">
        <form asp-area="Author" asp-controller="News" asp-action="WriteNews" method="post" enctype="multipart/form-data">
            <div class="form-group">
                @Html.LabelFor(x=>x.Title)
                @Html.TextBoxFor(x=>x.Title,"",new {@class="form-control", @placeholder="Title"})
            </div>
            <div class="form-group">
                @Html.LabelFor(x=>x.CategoryId, "Category")
                @Html.DropDownListFor(x=>x.CategoryId, categories, "Select Category", new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label class="d-block">Tags</label>
                <select multiple name="Tags" id="Tags" class="selectpicker form-control" data-live-search="true" data-max-options="5">
                    @foreach (var item in tags)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
            <div class="form-group">
                @Html.LabelFor(x=>x.Thumbnail,"Thumbnail Image")
                <span class="text-small text-muted">JPG and PNG files only</span>
                <div class="text-center">
                    <img id="imagePreview" class="img-thumbnail" src="" />
                </div>
                <input id="Thumbnail" name="Thumbnail" class="form-control" type="file" accept="image/*" />
            </div>
            <div class="form-group">
                @Html.TextAreaFor(x=>x.Content)
            </div>
            <button type="submit" class="btn btn-gradient-primary mr-2">Save</button>
        </form>
    </div>
</div>
@section Scripts{
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss fullscreen',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | addcomment showcomments fullscreen | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: '@User.Identity.Name',
        });
    </script>

    <script>
        const fileInput = document.getElementById('Thumbnail');
        const imagePreview = document.getElementById('imagePreview');

        fileInput.addEventListener('change', (event) => {
            const file = event.target.files[0];

            const reader = new FileReader();
            reader.readAsDataURL(file);

            reader.onload = () => {
                imagePreview.src = reader.result;
            };
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <script>
        $(function () {
            $('#Tags').selectpicker();
        });
    </script>
}